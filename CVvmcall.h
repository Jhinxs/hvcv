#pragma once
#include "common.h"
#include "hook.h"
#include "CVvmexitEntry.h"


typedef enum
{
	VMCALL_VMXOFF = 0,
	VMCALL_HOOK_EPT_PAGE = 1,
	VMCALL_INVEPT_ALL_CONTEXT = 2,
	VMCALL_INVEPT_SINGLE_CONTEXT = 3

}VMCALL_ARG;

typedef enum _INVVPID_ENUM
{
	VPID_INDIVIDUAL_ADDRESS = 0x00000000,
	VPID_SINGLE_CONTEXT = 0x00000001,
	VPID_ALL_CONTEXT = 0x00000002,
	VPID_SINGLE_CONTEXT_RETAINING_GLOBALS = 0x00000003
}INVVPID_ENUM, * PINVVPID_ENUM;

typedef struct _INVVPID_DESCRIPTOR
{
	ULONG64 VPID : 16;
	ULONG64 RESERVED : 48;
	ULONG64 LINEAR_ADDRESS;

} INVVPID_DESCRIPTOR, * PINVVPID_DESCRIPTOR;


typedef struct _INVEPT_DESCRIPTOR
{
	ULONG64 EptPointer;
	ULONG64  Reserveds;
}INVEPT_DESCRIPTOR, * PINVEPT_DESCRIPTOR;

typedef enum _INVEPT_TYPE
{
	VEPT_SINGLE_CONTEXT = 0x00000001,
	VEPT_ALL_CONTEXTS = 0x00000002
};

VOID InveptAllContexts();
VOID InveptSingleContext(ULONG64 EptPointer);

VOID InvvpidAllContexts();
VOID InvvpidSingleContext(int vpid);

VOID DealVmcall(ULONG64 VMCALL_ARG, ULONG64 OptionalParam1, PVOID HookFunction, PVOID* OrigFunction);